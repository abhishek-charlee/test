name: Feature branch deployment Workflow

on:
  push:
    branches:
      - "feat/*"
      - "Feat/*"
      - "chore/*"
# on:
#   pull_request:
#     branches:
#       - feat/*

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract Ticket ID
        id: extract-ticket-id
        run: |
          branch_name=$(echo $GITHUB_REF | sed 's|refs/heads/||')
          if [[ "$branch_name" =~ ^(feat/|chore/)(.*)$ ]]; then
            project_name=$(echo $branch_name | cut -d'/' -f 2)
            ticket_id=$(echo $branch_name | cut -d'/' -f 3)
            echo "::set-output name=project_name::$project_name"
            echo "::set-output name=ticket_id::$ticket_id"
          else
            echo "No matching pattern found in the branch name."
          fi
      - name: Show Ticket ID
        run: |
          ticket_id=${{ steps.extract-ticket-id.outputs.ticket_id }}
          ticket_id=${{ steps.extract-ticket-id.outputs.project_name }}
          echo "Ticket ID: $ticket_id"
          echo "branch name: $project_name"

      - name: ssh proxy command
        uses: appleboy/ssh-action@master
        with:
          host: 10.0.1.6
          username: abhishek
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 8463
          proxy_host: 34.138.106.113
          proxy_username: abhishek
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_port: 22
          script: |
            ticket_id=${{ steps.extract-ticket-id.outputs.ticket_id }}
            sudo su - test3 -c id
            sudo su - test3 -c pwd
            echo "Ticket ID: $ticket_id"
            sudo su - test3 -c "mkdir UI/$ticket_id"
            sudo su - test3 -c "cd UI/$ticket_id"
            sudo su - test3 -c "ls UI/"
            sudo su - test3 -c "cd UI/$ticket_id && git clone git@github.com:abhishek-charlee/test.git"

            start_port=3000
            end_port=9000

            for ((port=start_port; port<=end_port; port++))
            do
              if ! lsof -i :$port &> /dev/null; then
                echo "Port $port is available."
                export AVAILABLE_PORT=$port
                break  # Exit the loop after finding an available port
              fi
            done

      # - name: Start Server
      #   run: |
      #     cd your_project_directory
      #     ./start_server.sh $AVAILABLE_PORT
