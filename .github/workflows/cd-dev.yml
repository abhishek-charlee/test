name: Feature branch deployment Workflow

on:
  push:
    branches:
      - "feat/*/*"
      - "Feat/*/*"
      - "chore/*/*"
      - "Chore/*/*"
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract Project and Ticket ID
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          IFS='/' read -ra PARTS <<< "$BRANCH_NAME"
          project_name=${PARTS[1]}
          ticket_id=${PARTS[2]}
          echo "PROJECT_NAME=$project_name" >> $GITHUB_ENV
          echo "TICKET_ID=$ticket_id" >> $GITHUB_ENV

      - name: Display Project and Ticket ID
        run: |
          echo "Project Name: $PROJECT_NAME"
          echo "Ticket ID: $TICKET_ID"

      - name: Set SSH Key Secret
        run: |
          echo "$PROJECT_NAME"
          project_name_upcase=$(echo "$PROJECT_NAME" | tr '[:lower:]' '[:upper:]')
          echo "$project_name_upcase"
          project_secret_key="${project_name_upcase}_PRIVATE_KEY"
          echo $project_secret_key
          echo "PROJECT_SECRET_KEY=$project_secret_key" >> $GITHUB_ENV
          ssh_key=${{ secrets[env.PROJECT_SECRET_KEY] }}
          echo "hi"
          echo $ssh_key

      - name: ssh proxy command
        uses: appleboy/ssh-action@master
        with:
          host: 10.0.1.6
          username: $PROJECT_NAME
          key: ${{ secrets[env.PROJECT_SECRET_KEY] }}
          port: 8463
          proxy_host: 34.138.106.113
          proxy_username: abhishek
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_port: 22
          script: |
            whoami
            # sudo su - test3 -c id
            # sudo su - test3 -c pwd
            # sudo su - test3 -c "mkdir UI/$TICKET_ID"
            # sudo su - test3 -c "cd UI/$TICKET_ID"
            # sudo su - test3 -c "ls UI/"
            # sudo su - test3 -c "cd UI/$TICKET_ID && git clone git@github.com:abhishek-charlee/test.git"

            # start_port=3000
            # end_port=9000

            # for ((port=start_port; port<=end_port; port++))
            # do
            #   if ! lsof -i :$port &> /dev/null; then
            #     echo "Port $port is available."
            #     export AVAILABLE_PORT=$port
            #     break  # Exit the loop after finding an available port
            #   fi
            # done

      # - name: Start Server
      #   run: |
      #     cd your_project_directory
      #     ./start_server.sh $AVAILABLE_PORT
